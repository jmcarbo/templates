version: '3.4'
services:
  # FRONT
  chronograf:
    # Full tag list: https://hub.docker.com/r/library/chronograf/tags/
    image: chronograf
    command: --influxdb-url=http://influxdb:8086
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      # Mount for chronograf database
      - chronograf-data:/var/lib/chronograf
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "8888:8888"
    networks:
      - influx
    depends_on:
      - influxdb
      - kapacitor
  grafana:
    image: grafana/grafana:latest
    #container_name: grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "3000:3000"
    networks:
      - influx
    volumes:
      - graphana-data:/var/lib/grafana
    depends_on:
      - influxdb
    deploy:
      labels:
        - traefik.port=3000
        - traefik.protocol=http
        - traefik.docker.network=apps
        - traefik.frontend.rule=Host:grafana.imim.cloud
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  # MIDDLE
  kapacitor:
    # Full tag list: https://hub.docker.com/r/library/kapacitor/tags/
    image: kapacitor
    entrypoint: /bin/bash -c 'echo "$$KAPACITOR_CONFIG" | tee /etc/kapacitor/kapacitor.conf && kapacitor'
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      # Mount for kapacitor data directory
      - kapacitor-data:/var/lib/kapacitor
      # Mount for kapacitor configuration
      #- /etc/kapacitor/config:/etc/kapacitor
    ports:
      # The API for Kapacitor is served on port 9092
      - "9092:9092"
    networks:
      - influx
    depends_on:
      - influxdb
    environment:
      KAPACITOR_CONFIG: |-
        hostname = "localhost"
        data_dir = "/var/lib/kapacitor"
        skip-config-overrides = false
        default-retention-policy = ""
        [http]
          bind-address = ":9092"
          auth-enabled = false
          log-enabled = true
          write-tracing = false
          pprof-enabled = false
          https-enabled = false
          https-certificate = "/etc/ssl/kapacitor.pem"
          shutdown-timeout = "10s"
          shared-secret = ""
        [replay]
          dir = "/var/lib/kapacitor/replay"
        [storage]
          boltdb = "/var/lib/kapacitor/kapacitor.db"
        [task]
          dir = "/var/lib/kapacitor/tasks"
          snapshot-interval = "1m0s"
        [[influxdb]]
          enabled = true
          name = "default"
          default = false
          urls = ["http://influxdb:8086"]
          username = ""
          password = ""
          ssl-ca = ""
          ssl-cert = ""
          ssl-key = ""
          insecure-skip-verify = false
          timeout = "0s"
          disable-subscriptions = false
          subscription-protocol = "http"
          kapacitor-hostname = ""
          http-port = 0
          udp-bind = ""
          udp-buffer = 1000
          udp-read-buffer = 0
          startup-timeout = "5m0s"
          subscriptions-sync-interval = "1m0s"
          [influxdb.excluded-subscriptions]
            _kapacitor = ["autogen"]
        [logging]
          file = "STDERR"
          level = "INFO"
        [config-override]
          enabled = true
        [stats]
          enabled = true
          stats-interval = "10s"
          database = "_kapacitor"
          retention-policy = "autogen"
          timing-sample-rate = 0.1
          timing-movavg-size = 1000
#        [collectd]
#          enabled = false
#          bind-address = ":25826"
#          database = "collectd"
#          retention-policy = ""
#          batch-size = 5000
#          batch-pending = 10
#          batch-timeout = "10s"
#          read-buffer = 0
#          typesdb = "/usr/share/collectd/types.db"
#        [opentsdb]
#          enabled = false
#          bind-address = ":4242"
#          database = "opentsdb"
#          retention-policy = ""
#          consistency-level = "one"
#          tls-enabled = false
#          certificate = "/etc/ssl/influxdb.pem"
#          batch-size = 1000
#          batch-pending = 5
#          batch-timeout = "1s"
#          log-point-errors = true
#        [alerta]
#          enabled = false
#          url = ""
#          token = ""
#          environment = ""
#          origin = ""
#        [hipchat]
#          enabled = false
#          url = ""
#          token = ""
#          room = ""
#          global = false
#          state-changes-only = false
#        [opsgenie]
#          enabled = false
#          api-key = ""
#          url = "https://api.opsgenie.com/v1/json/alert"
#          recovery_url = "https://api.opsgenie.com/v1/json/alert/note"
#          global = false
#        [pagerduty]
#          enabled = false
#          url = "https://events.pagerduty.com/generic/2010-04-15/create_event.json"
#          service-key = ""
#          global = false
#        [smtp]
#          enabled = false
#          host = "localhost"
#          port = 25
#          username = ""
#          password = ""
#          no-verify = false
#          global = false
#          state-changes-only = false
#          from = ""
#          idle-timeout = "30s"
#        [sensu]
#          enabled = false
#          addr = ""
#          source = "Kapacitor"
#        [slack]
#          enabled = false
#          url = ""
#          channel = ""
#          username = "kapacitor"
#          icon-emoji = ""
#          global = false
#          state-changes-only = false
#        [talk]
#          enabled = false
#          url = ""
#          author_name = ""
#        [telegram]
#          enabled = false
#          url = "https://api.telegram.org/bot"
#          token = ""
#          chat-id = ""
#          parse-mode = ""
#          disable-web-page-preview = false
#          disable-notification = false
#          global = false
#          state-changes-only = false
#        [victorops]
#          enabled = false
#          api-key = ""
#          routing-key = ""
#          url = "https://alert.victorops.com/integrations/generic/20131114/alert"
#          global = false
#        [kubernetes]
#          enabled = false
#          in-cluster = false
#          token = ""
#          ca-path = ""
#          namespace = ""
#        [reporting]
#          enabled = true
#          url = "https://usage.influxdata.com"
#        [stats]
#          enabled = true
#          stats-interval = "10s"
#          database = "_kapacitor"
#          retention-policy = "autogen"
#          timing-sample-rate = 0.1
#          timing-movavg-size = 1000
#        [udf]
#        [deadman]
#          interval = "10s"
#          threshold = 0.0
#          id = "{{ .Group }}:NODE_NAME for task '{{ .TaskName }}'"
#          message = "{{ .ID }} is {{ if eq .Level \"OK\" }}alive{{ else }}dead{{ end }}: {{ index .Fields \"emitted\" | printf \"%0.3f\" }} points/INTERVAL."
#          global = false

  # BACK
  telegraf:
    # Full tag list: https://hub.docker.com/r/library/telegraf/tags/
    image: telegraf
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    entrypoint: /bin/bash -c 'echo "$$TELEGRAF_CONFIG" | tee /etc/telegraf/telegraf.conf && telegraf'
    #hostname: "{{.Node.Hostname}}-{{.Node.ID}}-{{.Service.Name}}"
    hostname: "{{.Node.Hostname}}"
    environment:
      TELEGRAF_CONFIG: |-
        [[outputs.influxdb]]
          urls = ["http://influxdb:8086"]
          database = "telegraf"
        [[inputs.kernel]]
        [[inputs.mem]]
        [[inputs.processes]]
        [[inputs.swap]]
        [[inputs.system]]
        [[inputs.cpu]]
          percpu = true
          totalcpu = true
          collect_cpu_time = false
          report_active = false
        [[inputs.disk]]
          ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
        [[inputs.diskio]]
        [[inputs.docker]]

    volumes:
      # Mount for telegraf configuration
      #- /data/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - influx
    depends_on:
      - influxdb
  # DATABASE
  influxdb:
    # Full tag list: https://hub.docker.com/r/library/influxdb/tags/
    image: influxdb
    command: -config /etc/influxdb/influxdb.conf
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      # Mount for influxdb data directory
      - influxdb-data:/var/lib/influxdb
      # Mount for influxdb configuration
      #- /data/syncthing/data/TICK/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
    networks:
      - influx
networks:
  influx:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 192.168.101.0/24

volumes:
  chronograf-data:
  kapacitor-data:
  influxdb-data:
  graphana-data:
