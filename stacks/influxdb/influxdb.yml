version: '3.4'
services:
  # FRONT
  chronograf:
    # Full tag list: https://hub.docker.com/r/library/chronograf/tags/
    image: chronograf
    command: --influxdb-url=http://influxdb:8086
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      # Mount for chronograf database
      - chronograf-data:/var/lib/chronograf
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "8888:8888"
    networks:
      - influx
    depends_on:
      - influxdb
      #- kapacitor
  grafana:
    image: grafana/grafana:latest
    #container_name: grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "3000:3000"
    networks:
      - influx
    volumes:
      - graphana-data:/var/lib/grafana
    depends_on:
      - influxdb
    deploy:
      labels:
        - traefik.port=3000
        - traefik.protocol=http
        - traefik.docker.network=apps
        - traefik.frontend.rule=Host:grafana.imim.cloud
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
  # MIDDLE
  #kapacitor:
  #  # Full tag list: https://hub.docker.com/r/library/kapacitor/tags/
  #  image: kapacitor
  #  deploy:
  #    replicas: 1
  #    placement:
  #      constraints:
  #        - node.role == manager
  #    restart_policy:
  #      condition: on-failure
  #  volumes:
  #    # Mount for kapacitor data directory
  #    - kapacitor-data:/var/lib/kapacitor
  #    # Mount for kapacitor configuration
  #    - /etc/kapacitor/config:/etc/kapacitor
  #  ports:
  #    # The API for Kapacitor is served on port 9092
  #    - "9092:9092"
  #  networks:
  #    - influx
  #  depends_on:
  #    - influxdb
  # BACK
  telegraf:
    # Full tag list: https://hub.docker.com/r/library/telegraf/tags/
    image: telegraf
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    entrypoint: /bin/bash -c 'echo "$$TELEGRAF_CONFIG" | tee /etc/telegraf/telegraf.conf && telegraf'
    #hostname: "{{.Node.Hostname}}-{{.Node.ID}}-{{.Service.Name}}"
    hostname: "{{.Node.Hostname}}"
    environment:
      TELEGRAF_CONFIG: |-
        [[outputs.influxdb]]
          urls = ["http://influxdb:8086"]
          database = "telegraf"

    volumes:
      # Mount for telegraf configuration
      #- /data/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - influx
    depends_on:
      - influxdb
  # DATABASE
  influxdb:
    # Full tag list: https://hub.docker.com/r/library/influxdb/tags/
    image: influxdb
    command: -config /etc/influxdb/influxdb.conf
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      # Mount for influxdb data directory
      - influxdb-data:/var/lib/influxdb
      # Mount for influxdb configuration
      #- /data/syncthing/data/TICK/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
    networks:
      - influx
networks:
  influx:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 192.168.101.0/24

volumes:
  chronograf-data:
  kapacitor-data:
  influxdb-data:
  graphana-data:
